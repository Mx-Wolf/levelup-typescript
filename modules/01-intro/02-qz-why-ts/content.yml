title: Проверьте ваше представление о назначении и возможностях TypeScript
type: test
description: Выберите правильный ответ из предложенных
wizard: true
failureMessage: Попробуйте вернуться к предыдущей статье!
questions:
  - title: Правда ли, что JavaScript был создан для разработки сложных распределенных многопользовательских систем?
    description: Вспомните, что в 1994 году JavaScript был создан Бренданом Айком (Brendan Eich) за 10 дней.
    id: 1
    type: single
    options:
      - value: Да, JavaScript был языком программирования сложных распределенных систем с момента своего создания
        correct: false
        id: 1
        # Обязательно ли писать слова "неверный ответ?" эти слова и так показывает интерфейс?
        resultMessage:  |
          JavaScript был создан чтобы оживить статичные HTML страницы. Изначально, этот проект не преследовал цели создания больших, распределенных и критических для бизнеса систем. JavaScript позволил добавить динамику к статичным страницам без необходимости получения от сервера версии страницы, содержащей лишь несколько художественных отличий.
      - value: Нет, JavaScript разрабатывался как язык создания сценариев для оживления пользовательского интерфейса
        correct: true
        id: 2
        resultMessage: |
          JavaScript был создан во времена, когда стоимость доставки HTML файла с сервера на браузер была очень высока, но уже возникала потребность создания динамического контента. JavaScript позволил добавить динамику к статичным страницам без необходимости получения от сервера версии страницы, содержащей лишь несколько художественных отличий.
  - title: "Процесс создания каких приложений не выигрывает от использования TypeScript вместо JavaScript?"
    description: "Подумайте о том, что проекты могут различаться своей критичностью для бизнеса, количеством заинтересованных участников, скоростью реализации, сроками жизни продукта и многими другими параметрами."
    id: 2
    type: "multiple"
    options:
      - correct: false
        value: "SPA - одностраничные приложения"
        id: 1
        resultMessage: "Поскольку все существующие SPA-фреймворки и библиотеки предоставляют разработчику возможность создавать исходный код на TypeScript вы получите множество подсказок во время работы и повысите свою производительность"
      - correct: false
        value: "Написание JavaScript-библиотеки функций и компонентов для коллег и сообщества в целом"
        id: 2
        resultMessage: "TypeScript позволяет создавать надежные, устойчивые и легко поддерживаемые библиотеки, дополнительно TypeScript создает машино-читаемую документацию об API библиотеки. Поэтому и вы и ваши пользователи получат дополнительные удобства от использования TypeScript"
      - correct: false
        value: "Оформление JavaScript-пакета для node.js"
        id: 3
        resultMessage: "С одной стороны Node.js запускает JavaScript код в модулях формата CommonJS и ESM, с другой стороны TypeScript позволяет вам написать код один раз и создать результат - JavaScript в модулях любого формата всего лишь изменением одной строки в файле tsconfig.json"
      - correct: false
        value: "Сопровождение существующего приложения"
        id: 4
        resultMessage: "в TypeScript допускается любая конструкция, которая допустима в JavaScript, поэтому прямое \"переименование\" файла .js в .ts и последующая перекомпиляция проекта вернет вам ваш же код. TypeScript, возможно, будет жаловаться на рискованные места, но тем самым облегчит ваш труд по поиску дефектов."
      - correct: true
        value: "Правильного ответа среди перечисленных нет"
        id: 5
        resultMessage: "При использовании TypeScript вы получаете серьезные преимущества в борьбе за качество кода не зависимо от размеров проекта или рисков связанных с ним."
  - title: "Чем привлекателен TypeScript во время редактирования исходного кода в совместимых редакторах?"
    description: "TypeScript это не только компилятор, но и дополнительные услуги IDE"
    id: 3
    type: "multiple"
    # На самом деле все ответы верные. Вопрос подчеркивает важность сервисов компилятора для продуктивной работы и обосновывает переход с JavaScript на TypeScript
    options:
      - correct: true
        value: "Сокращает потери времени на поиск дефектов"
        id: 1
        resultMessage: "TypeScript анализирует ваш код и обозначает предупреждениями и ошибками те места, которые, зачастую, легко пропустить разработчику. Он позволяет предусмотреть необходимые проверки еще до падения программы во время работы"
      - correct: true
        value: "Мотивирует на улучшение существующего кода"
        id: 2
        resultMessage: "TypeScript существенно снижает риск неверного рефакторинга, что позволяет делать его чаще и эффективнее"
      - correct: true
        value: "Снижает стресс во время поиска нужных мест в программе (своей или у коллеги) для срочных действий"
        id: 3
        resultMessage: "TypeScript читает исходный код и позволяет редакторам настроить улучшенную навигацию по модулям проекта"
  - title: "TypeScript требует больше усилий от разработчика во время изучения, по сравнению с JavaScript"
    description: "Чтобы узнавать что-то новое, нужно узнавать что-то новое, так ведь?"
    id: 4
    options:
      - correct: false
        id: 1
        resultMessage: "Для разработчиков владеющих статически типизируемыми языками, многие вещи покажутся знакомыми"
        value: "Нет"
      - correct: true
        id: 2
        resultMessage: "TypeScript это набор отдельных навыков и требуется приложить определенные усилия, чтобы ими овладеть"
        value: "Да"
    type: "single"
successMessage: "У вас есть мотивация хорошенько разобраться в деталях TypeScript и этот курс вам поможет"
