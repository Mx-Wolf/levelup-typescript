title: Методы уточнения типов значений
type: test
description: |
  Проверьте ваши знания о способах сужения типов typescript
wizard: true
successMessage: Порядок, переходим к следующему разделу
failureMessage: Вам следует повторить основные сведения о способах сужения типов typescript
questions:
  - id: 10
    title: Верно ли что тип переменной `a` будет строка?
    description: |
      в контексте объявления переменной а выясните ее тип с точки зрения компилятора typescript
      ```typescript
      const a = typeof 42;
      ```
    type: single
    options:
      - id: 10
        value: нет, тип переменной `a`  будет number
        correct: false
        resultMessage: |
          оператор typeof возвращает одну
          из предопределенных строк (
            "undefined" "boolean","number","string", "symbol","function","object"
          ). Типом переменной a будет пересечение уточненных строк "undefined" "boolean"|"number"|"string"|"symbol"|"function"|"object"
      - id: 20
        value: да, тип переменной `a`  будет строка
        correct: false
        resultMessage: |
          "оператор typeof возвращает одну
          из предопределенных строк (
            "undefined" "boolean","number","string", "symbol","function","object"
          ). Типом переменной a будет пересечение уточненных строк "undefined"|"boolean"|"number"|"string"|"symbol"|"function"|"object""
      - id: 30
        value: нет, тип переменной `a`  будет пересечение специальных значений, возвращаемых оператором typeof в javascript
        correct: true
        resultMessage: |
          "оператор typeof возвращает одну
          из предопределенных строк (
            "undefined" "boolean","number","string", "symbol","function","object"
          ). Типом переменной a будет пересечение уточненных строк "undefined" "boolean"|"number"|"string"|"symbol"|"function"|"object""
  - id: 20
    title: Верно ли что тип переменной `a` будет строка?
    description: |
      В контексте объявления переменной `a` укажите ее тип
      ```typescript
      const b = 42;
      let a: typeof b;
      ```
    type: single
    options:
      - id: 10
        value: нет, тип переменной `a` будет `number`
        correct: false
        resultMessage: |
          Тип переменной `a` будет специализация типа number, а именно 42.Переменной a можно присвоить любое числовое значение но только если оно равно 42.
      - id: 20
        value: нет, тип переменной `a` будет только специальная строка
        correct: false
        resultMessage: |
          Тип переменной `a` будет специализация типа number, а именно 42.Переменной a можно присвоить любое числовое значение но только если оно равно 42.
      - id: 30
        value: нет, тип переменной будет специализация типа number
        correct: true
        resultMessage: |
          Тип переменной `a` будет специализация типа number, а именно 42.Переменной a можно присвоить любое числовое значение но только если оно равно 42.
  - id: 30
    title: Значения какого типа можно получить после вызова функции quiz?
    description: |
      В контексте приведенного куска кода выясните тип значения, возвращаемого функцией quiz
      ```typescript
      function guard(value: unknown): value is Array<unknown> {
          return Array.isArray(value) && value.length>0;
      }

      function quiz(value: unknown) {
          if (guard(value)) {
              return value[0];
          }
          throw new Error();
      }
      ```
    type: single
    options:
      - id: 10
        value: функция всегда завершается аварийно и вызывает исключение.
        correct: false
        resultMessage: |
          Когда функция возвращает значение, тип этого значения для компилятора typescript неизвестен. Кроме этого функция может не завершиться, а вызвать исключение.
      - id: 20
        value: тип возвращаемого значения неизвестен unknown.
        correct: false
        resultMessage: |
          Когда функция возвращает значение, тип этого значения для компилятора typescript неизвестен. Кроме этого функция может не завершиться, а вызвать исключение.
      - id: 30
        value: тип возвращаемого значения не определен undefined
        correct: true
        resultMessage: |
          Когда функция возвращает значение, тип этого значения для компилятора typescript неизвестен. Кроме этого функция может не завершиться, а вызвать исключение.


