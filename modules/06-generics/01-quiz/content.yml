title: Вопросы по теории типов
type: test
description: |
  Проверьте ваши знания о системе примитивных типов typescript
wizard: true
successMessage: Порядок, переходим к следующему разделу
failureMessage: Вам следует повторить основные сведения о системе примитивных типов
questions:
  - id: 10
    title: Под типом, TypeScript понимает множество элементы которого имеют общие свойства?
    type: single
    options:
      - id: 10
        value: да
        correct: true
        resultMessage: |
          Статический анализ TypeScript обращает внимание на форму значения, а не на название типа. Такой анализ - "по аналогии" называют утиным - если ходит, выглядит и крякает как утка - значит утка.
      - id: 20
        value: нет
        correct: false
        resultMessage: |
          Статический анализ TypeScript обращает внимание на форму значения, а не на название типа. Такой анализ - "по аналогии" называют утиным - если ходит, выглядит и крякает как утка - значит утка.
  - id: 20
    title: "Какой смысл выражения string|number в контексте типов typescript"
    type: multiple
    options:
      - id: 10
        value: Переменный этого типа могут не иметь инициализации и быть неопределенными
        correct: false
        resultMessage: |
          оператор вертикальная черта обозначает конструирование типа  объединения двух других типов. значения у типа-объединения могут быть как значения первого (строка), так и второго (число) типа.
      - id: 20
        value: переменные этого типа могут содержать значения булевые значения true или false
        correct: false
        resultMessage: |
          оператор вертикальная черта обозначает конструирование типа  объединения двух других типов. значения у типа-объединения могут быть как значения первого (строка), так и второго (число) типа.
      - id: 30
        value: переменные этого типа могут содержать строковые значения
        correct: true
        resultMessage: |
          оператор вертикальная черта обозначает конструирование типа  объединения двух других типов. значения у типа-объединения могут быть как значения первого (строка), так и второго (число) типа.
      - id: 40
        value: переменные этого типа могут содержать числовые значения
        correct: true
        resultMessage: |
          оператор вертикальная черта обозначает конструирование типа  объединения двух других типов. значения у типа-объединения могут быть как значения первого (строка), так и второго (число) типа.
      - id: 50
        value: переменные этого типа могут быть инициализированы значением null
        correct: false
        resultMessage: |
          оператор вертикальная черта обозначает конструирование типа  объединения двух других типов. значения у типа-объединения могут быть как значения первого (строка), так и второго (число) типа.
  - id: 30
    title: Typescript игнорирует объединение любого типа с типом never
    type: single
    options:
      - id: 10
        value: да
        correct: true
        resultMessage: |
           "T | never => T"
      - id: 20
        value: нет
        correct: false
        resultMessage: |
            "T | never => T"
  - id: 40
    title: Какой тип эквивалентен типу n
    description: |
      ```typescript
      type n = (string | number) & string;
      ```
    type: single
    options:
      - id: 10
        value: string
        correct: true
        resultMessage: |
            Мы здесь имеем пересечение множества строк со множеством, являющимся объединением всех строк и всех чисел. Результатом такого действия является множество всех строк.
      - id: 20
        value: number
        correct: false
        resultMessage: |
            Мы здесь имеем пересечение множества строк со множеством, являющимся объединением всех строк и всех чисел. Результатом такого действия является множество всех строк.


