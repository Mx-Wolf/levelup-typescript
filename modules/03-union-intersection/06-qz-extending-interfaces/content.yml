description: "Интерфейсы являются важной частью вселенной TypeScript и следует уметь эффективно их использовать"
failureMessage: "Во время разработки приложений вам часто будет требоваться описание структуры точек взаимодействия различных частей программы. Интерфейсы подходят для таких целей очень хорошо"
questions:
  - description: ""
    options:
      - value: "Да"
        correct: true
        resultMessage: "TypeScript допускает множественное наследование интерфейсов. Идентификаторы интерфейсов в этом случае указываются через запятую"
        id: 1
      - correct: false
        resultMessage: "TypeScript допускает множественное наследование интерфейсов. Идентификаторы интерфейсов в этом случае указываются через запятую"
        value: "Нет"
        id: 2
    title: "может ли интерфейс TypeScript наследовать несколько разных родительских интерфейсов?"
    type: "single"
    id: 1
  - id: 2
    title: "В контексте определения интерфейсов Country  и View почему возникает ошибка компиляции?"
    type: "multiple"
    description: "```typescript\n\n      interface Country {\n        border: { length: number; };\n    }\n    \n    interface View {\n        border: { color: string; };\n    }\n    \n    interface CountryView extends Country, View { }\n    \n    const countrySettings = {\n        border: {\n            color: 'red',\n            length: 30000,\n        },\n    };\n      \n```"
    options:
      - correct: false
        value: "TypeScript не допускает пустые интерфейсы как DrawableCountry, поскольку они все эквивалентны"
        resultMessage: "Ошибка возникает в связи несовместимостью структуры свойства border."
        id: 1
      - correct: false
        value: "TypeScript не допускает множественное наследование не экспортированных интерфейсов"
        resultMessage: "Ошибка возникает в связи несовместимостью структуры свойства border."
        id: 2
      - correct: false
        value: "TypeScript не допускает множественное наследование интерфейсов содержащих сложные типы"
        resultMessage: "Ошибка возникает в связи несовместимостью структуры свойства border."
        id: 3
      - correct: true
        value: "Правильный ответ не указан"
        resultMessage: "Ошибка возникает в связи несовместимостью структуры свойства border."
        id: 4

  - description: "```typescript\n\n      interface GeoBorder {\n        length: number;\n    }\n    \n    interface DrawableBorder {\n        color: string;\n    }\n    \n    interface Border extends GeoBorder, DrawableBorder{}\n    \n    interface CountryView { \n        border:Border;\n    }\n    \n    const countrySettings = {\n        border: {\n            color: 'black',\n            length: 30000,\n        },\n    } as const;\n    \n    \n```"
    options:
      - correct: false
        value: "Нет"
        resultMessage: "Эквивалентность типов в TypeScript рассматривается относительно применимых операций. К контексте приведенного примера можно допустить функции где значения типа CountryView и значение переменной countryView будут эквивалентны, а можно - где нет"
        id: 1
      - correct: false
        value: "Да"
        resultMessage: "Эквивалентность типов в TypeScript рассматривается относительно применимых операций. К контексте приведенного примера можно допустить функции где значения типа CountryView и значение переменной countryView будут эквивалентны, а можно - где нет"
        id: 2
      - correct: true
        value: "Невозможно ответить"
        resultMessage: "Эквивалентность типов в TypeScript рассматривается относительно применимых операций. К контексте приведенного примера можно допустить функции где значения типа CountryView и значение переменной countryView будут эквивалентны, а можно - где нет"
        id: 3
    title: "В контексте определения интерфейсов GeoBorder, DrawableBorder является ли тип значения переменной эквивалентным интерфейсу CountryView"
    type: "multiple"
    id: 3
successMessage: "Во время разработки приложений вам часто будет требоваться описание структуры точек взаимодействия различных частей программы. Интерфейсы подходят для таких целей очень хорошо"
title: "Проверьте ваше понимание поведения интерфейсов в TypeScript"
type: "test"
wizard: true
