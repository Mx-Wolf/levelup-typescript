title: Цикл перебора ключей типо-параметра
type: test
wizard: true
successMessage: Порядок, переходим к следующему разделу
failureMessage: Вам следует повторить основные сведения о сервису преобразования ключей типо-параметра
questions:
  - id: 10
    title: Сколько ключей у типа созданного следующим описанием
    description: |
      ```typescript
      type fields = "writable"|"hidden"|"system"|"remote";
      type FileFlags = {
          [K in fields]:boolean;
      }
      ```
    type: single
    options:
      - id: 10
        value: 1
        correct: false
        resultMessage: |
          запись в квадратных скобках инструктирует TypeScript произвести итерацию
          в цикле для каждого элемента объединения `fields`
      - id: 20
        value: 3
        correct: false
        resultMessage: |
          TypeScript производит итерацию для каждого элемента объединения `fields
          и как результат получает четыре ключа. Три было в статье
      - id: 30
        value: 4
        correct: true
        resultMessage: |
          TypeScript производит итерацию для каждого элемента объединения `fields
          и как результат получает четыре ключа
      - id: 40
        value: мы определяем ассоциативный массив и он может иметь любое количество ключей
        correct: false
        resultMessage: |
          В данном случае мы определяем тип, а не значение. TypeScript производит итерацию для каждого элемента объединения `fields
          и как результат получает четыре ключа
  - id: 20
    title: Какие модификаторы TypeScript позволяет накладывать на ключи типа-результата итераций?
    type: multiple
    options:
      - id: 10
        value: readonly
        resultMessage: тип-результат будет иметь модификатор - только для чтетия
        correct: true
      - id: 20
        value: "? (необязательность)"
        correct: true
        resultMessage: |
          тип результата будет иметь ключ с отметкой - необязательно
  - id: 30
    title: Какие типы будут иметь ключи вычисленного типа
    description: |
      ```typescript
      type fields = "writable"|"hidden"|"system"|"remote";
      type FileFlags = {
        [K in fields]:boolean;
      }
      ```
    type: single
    options:
      - id: 10
        value: строковые
        description: Все поля называются строками, значит и у ключей будет значение строк
        resultMessage: всем ключам будет назначено значение типа `boolean`
        correct: false
      - id: 20
        value: boolean
        correct: true
        resultMessage: |
          всем ключам будет назначено значение типа `boolean`

  - id: 40
    title: Сколько ключей с типом `boolean` будет у типа-результата
    description: |
      ```typescript
      type fields = "writable" | "hidden" | "system" | "remote";
      type FileFlags = {
          [K in fields]?: boolean;
      }
      function example (fileAttrs:FileFlags){
          console.log(fileAttrs)
      }
      ```
    type: single
    options:
      - id: 10
        value: четыре
        description: При определении ассоциативного типа FileFlags всем полям назначен тип boolean.
        resultMessage: В связи с тем, что каждое поле в типе результате помечено признаком необязательность (вопросительный знак) типы всех полей будут boolan|undefined.
        correct: false
      - id: 20
        value: ни одного
        correct: true
        resultMessage: |
          В связи с тем, что каждое поле в типе результате помечено признаком необязательность (вопросительный знак) типы всех полей будут boolan|undefined. Это тип требует дополнительной проверки наличия значения.


