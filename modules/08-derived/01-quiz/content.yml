title: Производные типы
type: test
description: |
  Проверьте ваши знания об месте и роли производных типов типов typescript
wizard: true
successMessage: Порядок, переходим к следующему разделу
failureMessage: Вам следует повторить основные сведения о производных типах
questions:
  - id: 10
    title: Какое из утверждений является верным для двух типов A и B
    description: |
      ```typescript
      type A = string;
      type B = "string";
      let a:A;
      let b:B;
      ```
    type: multiple
    options:
      - id: 10
        value: A является специализацией B (A extends B)
        correct: false
        resultMessage: |
          тип B является специализацией типа A и не все значениями типа A могут быть значениями B. В частности переменными типа A можно присвоить любое строковое значение, но переменным типа B можно присвоить только значение "string";
      - id: 20
        value: переменной b можно присвоить значение переменной a
        correct: false
        resultMessage: |
          тип B является специализацией типа A и не все значениями типа A могут быть значениями B. В частности переменными типа A можно присвоить любое строковое значение, но переменным типа B можно присвоить только значение "string";
      - id: 30
        value: typeof a === typeof b
        correct: true
        resultMessage: |
          тип B является специализацией типа A и не все значениями типа A могут быть значениями B. В частности переменными типа A можно присвоить любое строковое значение, но переменным типа B можно присвоить только значение "string"; Во время выполнения программы все сведения об аннотации типов теряются остаются только инструменты предоставляемые javascript.
  - id: 20
    title: Какое действие над типами обозначает выражение
    description: |
      ```
      type DieRollResult = 1 | 2 | 3 | 4 | 5 | 6;
      ```
    type: single
    options:
      - id: 10
        value: объединение шести различных специализаций типа number
        correct: true
        resultMessage: |
          с помощью вертикальной черты в контексте типов в TypeScript выражается операция объединения типов.
      - id: 20
        value: пересечение шести различных специализаций типа number
        correct: false
        resultMessage: |
          с помощью вертикальной черты в контексте типов в TypeScript выражается операция объединения типов.
  - id: 30
    title: Какие значения допустимы для переменной buffer
    description: |
      ```
      type DeckRow = "Ace" | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | "Jack" | "Queen" | "King";
      type Band = "Ace of Base" | "Queen" | "Deep Purple" | "Песняры";

      let buffer : DeckRow & Band;
      ```
    type: multiple
    options:
      - id: 10
        value: любое числовое значение от 2 до 10
        correct: false
        resultMessage: |
          с помощью & в контексте типов в TypeScript выражается операция пересечения типов. Среди указанных типов общий только тип, значениями которого являются строки "Queen",
      - id: 20
        value: строки Ace, Queen
        correct: false
        resultMessage: |
          с помощью & в контексте типов в TypeScript выражается операция пересечения типов. Среди указанных типов общий только тип, значениями которого являются строки "Queen",
      - id: 30
        value: Queen
        correct: true
        resultMessage: |
          с помощью & в контексте типов в TypeScript выражается операция пересечения типов. Среди указанных типов общий только тип, значениями которого являются строки "Queen",





