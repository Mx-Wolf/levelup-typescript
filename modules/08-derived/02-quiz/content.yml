title: Примитивные типы
type: test
description: |
  Проверьте ваши знания о системе условных типов typescript
wizard: true
successMessage: Порядок, переходим к следующему разделу
failureMessage: Вам следует повторить основные сведения о системе условных типов
questions:
  - id: 10
    title: Какого типа значения могут находится в переменной buffer
    description: |
      в контексте определения типа Result выясните значения каких типов могут быть присвоены переменной buffer
      ```typescript
      type Result = boolean | never | string;

      let result: Result;
      ```
    type: multiple
    options:
      - id: 10
        value: true
        correct: true
        resultMessage: |
          в типах-объединениях тип never игнорируется. переменная будет иметь тип boolean | string;
      - id: 20
        value: 42
        correct: false
        resultMessage: |
          в типах-объединениях тип never игнорируется. переменная будет иметь тип boolean | string;
      - id: 30
        value: "never"
        correct: true
        resultMessage: |
          в типах-объединениях тип never игнорируется. переменная будет иметь тип boolean | string;
      - id: 40
        value: "data"
        correct: true
        resultMessage: |
          в типах-объединениях тип never игнорируется. переменная будет иметь тип boolean | string;
  - id: 20
    title: Значения какого типа может иметь переменная buffer?
    description: |
      В контексте определения типа ExceptNumbers определите какие значения допустимы для переменной buffer
      ```typescript
      type ExceptNumbers<T> = T extends number?never:T;

      let buffer:ExceptNumbers<boolean|number|string>;
      ```
    type: multiple
    options:
      - id: 10
        value: boolean
        correct: true
        resultMessage: |
          Операция условного типа является дистрибутивной. т.е. она применяется к каждому типу объединения отдельно. в типах-объединениях тип never игнорируется. переменная будет иметь тип boolean | string;
      - id: 20
        value: number
        correct: false
        resultMessage: |
          Операция условного типа является дистрибутивной. т.е. она применяется к каждому типу объединения отдельно. в типах-объединениях тип never игнорируется. переменная будет иметь тип boolean | string;
      - id: 30
        value: never
        correct: false
        resultMessage: |
          Операция условного типа является дистрибутивной. т.е. она применяется к каждому типу объединения отдельно. в типах-объединениях тип never игнорируется. переменная будет иметь тип boolean | string;
      - id: 40
        value: string
        correct: true
        resultMessage: |
         Операция условного типа является дистрибутивной. т.е. она применяется к каждому типу объединения отдельно. в типах-объединениях тип never игнорируется. переменная будет иметь тип boolean | string;

  - id: 30
    title: Значения какого типа может иметь переменная buffer?
    description: |
      В контексте определения типа ExceptNumbers определите какие значения допустимы для переменной buffer
      ```typescript
      type ExceptNumbers<T> = T extends "type"?never:T;

      let buffer:ExceptNumbers<"type"|"data"|"error">;
      ```
    type: multiple
    options:
      - id: 10
        value: true
        correct: false
        resultMessage: |
          Операция условного типа является дистрибутивной. т.е. она применяется к каждому типу объединения отдельно. в типах-объединениях тип never игнорируется. переменная будет иметь тип"data"|"error" и не может содержать значение false;
      - id: 20
        value: 42
        correct: false
        resultMessage: |
          Операция условного типа является дистрибутивной. т.е. она применяется к каждому типу объединения отдельно. в типах-объединениях тип never игнорируется. переменная будет иметь тип"data"|"error" и не может содержать числовое значение;
      - id: 30
        value: "type"
        correct: false
        resultMessage: |
         Операция условного типа является дистрибутивной. т.е. она применяется к каждому типу объединения отдельно. в типах-объединениях тип never игнорируется. переменная будет иметь тип"data"|"error" и не может содержать значение "type";
      - id: 40
        value: "error"
        correct: true
        resultMessage: |
         Операция условного типа является дистрибутивной. т.е. она применяется к каждому типу объединения отдельно. в типах-объединениях тип never игнорируется. переменная будет иметь тип"data"|"error";

