title: Вопросы об использовании декораторов
type: test
description: |
  Проверьте ваши знания о в typescript
wizard: true
successMessage: Порядок, переходим к следующему разделу
failureMessage: Вам следует повторить основные сведения декораторах
questions:
  - id: 10
    title: Какой оператор javascript  позволяет выяснить тип примитивного значения переменной?
    type: single
    options:
      - id: 10
        value: typeof
        correct: true
        resultMessage: | 
          оператор typeof возвращает одну 
          из предопределенных строк (
            "undefined" "boolean","number","string", "symbol","function","object"
          )
      - id: 20
        value: instanceof
        correct: false
        resultMessage: |
          Оператор возвращает флаг true, если 
          среди прототипов в цепочки левого операнда
          присутствует прототип из правого операнда. 
          Этот оператор не позволяет выяснить тип примитивного значения
  - id: 20
    title: Какие специальные примитивные типы добавлены в Typescript?
    description: |
      Укажите среди приведенных типов те, которые относятся только к 
      typescript и не могут быть использованы во время работы приложения
      в браузере.
    type: multiple
    options:
      - id: 10
        value: undefined
        resultMessage: |
          Этот тип доступен анализа во время работы приложения с 
          помощью оператора typeof.
      - id: 20
        value: never
        correct: true              
        resultMessage: |
          Этот тип введен в typescript для обозначения ситуации, когда 
          переменная никогда не получит значения. Вы можете встретить этот тип 
          в контексте недореализованной функции, исчерпывающего перебора 
          вариантов switch/case и других.
      - id: 30
        value: unknown
        correct: true
        resultMessage: |
          Этот тип введен в typescript для такого значения, в отношении
          которого ничего не известно без дополнительных проверок. Этот 
          тип позволяет вам потребовать от компилятора проявить твердость
          и потребовать от вас выяснить реальный полученный тип во время 
          работы приложения.
      - id: 40
        value: void
        correct: true
        resultMessage: |
          Этот тип введен в typescript для моделирования процедур, т.е. 
          функций созданных для выполнения побочных эффектов, 
          которые не возвращают значения.
      - id: 50
        value: object
        correct: false
        resultMessage: |
          этот тип доступен для анализа значений переменных во 
          время работы программы javascript.


